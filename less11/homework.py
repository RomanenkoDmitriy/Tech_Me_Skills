"""
Обязательное домашнее задание:
Самая длинная последовательность Коллатца

Следующая итерационная последовательность определена для набора натуральных чисел:

Если n чётное n = n/2 Если n нечётное n = n*3 + 1

Используя приведенное выше правило и начиная с 13, мы генерируем следующую последовательность:

13 -> 40 -> 20 -> 10 -> 5 -> 16 -> 8 -> 4 -> 2 -> 1

Видно, что эта последовательность (начиная с 13 и заканчивая 1) содержит 10 терминов. Хотя это еще не доказано
(задача Коллатца), считается, что все стартовые номера заканчиваются на 1.

Какое начальное число, меньшее миллиона, дает самую длинную цепочку?

ПРИМЕЧАНИЕ: Как только цепочка начинается, термины могут превышать один миллион.

СКОРОСТЬ ВЫПОЛНЕНИЯ ЗАМЕРЯЕМ В COLAB:

0 место - < 1.5s
1 место - < 3s
2 место - < 15s
3 место - < 35s
-1 место  - > 35s

Домашнее задание считаеться выполненым емли оно работает на 1_000_000 быстрее чем за 20 минут.
"""

from time import time

d = {}


def task_collatza(num: int, counter=0) -> int:

    a = 0

    if num in d:
        counter += d[num]
        return counter

    if num == 1:
        return counter

    if num % 2 == 0:
        a = num / 2
    else:
        a = num * 3 + 1

    counter += 1

    return task_collatza(num=a, counter=counter)


max_counter = 0
num = 0
start = time()

for n in range(1, 1_000_001):
    if n in d:
        if max_counter < d[n]:
            num = n
            max_counter = d[n]
        continue
    counter = task_collatza(n)
    d[n] = counter

    if max_counter < counter:
        max_counter = counter
        num = n

print(time() - start)
print(f"Counter: {max_counter}, Nam: {num}")
